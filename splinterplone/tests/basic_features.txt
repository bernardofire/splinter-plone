======================
Basic Features of Splinter-Plone
======================

    Login with the owner role
    >>> self.portal_login_as_owner()
    >>> self.browser.is_text_present('You are now logged in')
    True

    Logout in portal
    >>> self.portal_logout()
    >>> self.browser.is_text_present('You are now logged out')
    True

    Create user manager and login
    >>> self.portal_adduser_as_manager('manager','manager')
    >>> self.portal_login('manager','manager')
    >>> self.portal_logout()

    Visit portal home
    >>> self.portal_home()
    >>> self.browser.is_text_present('Welcome to Plone')
    True

    Visit any page in portal, for example News page
    >>> self.portal_visit('news')
    >>> self.browser.is_text_present('Site News')
    True

    Navigating in portal submenu, for example clicking in "Rules"
    >>> self.portal_navigate_submenu('Rules')
    >>> self.browser.is_text_present('There are currently no active content rules in this Plone Site.')

    List portal states, for example home
    >>> self.portal_login_as_owner()
    >>> self.portal_home()
    >>> self.portal_list_states()
    >>> self.browser.is_text_present('Published')
    True
    >>> self.browser.is_text_present('Send back')
    True
    >>> self.browser.is_text_present('Retract')
    True
    >>> self.browser.is_text_present('Advanced...')
    True

    Modify portal state, for example Home
    >>> self.portal_home()
    >>> self.portal_modify_state_to('Send back')
    >>> self.browser.is_text_present('Item state changed.')
    True

    List portal enable content types
    >>> self.portal_click_enable_content_types()
    >>> self.browser.is_text_present('Collection')
    True
    >>> self.browser.is_text_present('Event')
    True
    >>> self.browser.is_text_present('File')
    True
    >>> self.browser.is_text_present('Folder')
    True
    >>> self.browser.is_text_present('News Item')
    True
    >>> self.browser.is_text_present('Page')
    True

    Close list enable content types
    >>> self.portal_click_enable_content_types()

    Add content type, for example a Page 
    >>> self.portal_add_content_type('Page')
    >>> self.browser.is_text_present('Add Page')
    True
    >>> self.browser.fill('title','test page')
    >>> self.browser.find_by_name('form.button.save').first.click()
    >>> self.browser.click_link_by_text('test page')
    >>> self.browser.is_text_present('test page')
    True

    List content item actions, in "News" page for example
    >>> self.portal_visit('news')
    >>> self.portal_click_content_item_action()
    >>> self.browser.is_text_present('Cut')
    True
    >>> self.browser.is_text_present('Copy')
    True
    >>> self.browser.is_text_present('Delete')
    True
    >>> self.portal_click_content_item_action()

    Add content item action, for example rename "News" page
    >>> portal_add_item_action('Rename')
    >>> self.browser.is_text_present('Rename item')
    True
    >>> self.portal_logout()
